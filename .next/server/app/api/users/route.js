"use strict";(()=>{var e={};e.id=701,e.ids=[701],e.modules={46517:e=>{e.exports=require("lodash")},11185:e=>{e.exports=require("mongoose")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},51908:(e,r,t)=>{t.r(r),t.d(r,{headerHooks:()=>v,originalPathname:()=>w,requestAsyncStorage:()=>y,routeModule:()=>g,serverHooks:()=>h,staticGenerationAsyncStorage:()=>f,staticGenerationBailout:()=>_});var o={};t.r(o),t.d(o,{GET:()=>GET,POST:()=>POST,dynamic:()=>m});var n=t(10884),s=t(16132),a=t(95798),i=t(11185);let c={tlsAllowInvalidHostnames:!0,tls:!0,tlsCAFile:process.env.TLS_CA_FILE,tlsCertificateKeyFile:process.env.TLS_CERT_KEY_FILE},u={isConnected:!!i.ConnectionStates&&i.ConnectionStates.disconnected};async function dbConnect(){if(!process.env.MONGODB_URI)throw Error("Please add your Mongo URI to .env.local");if(u.isConnected===i.ConnectionStates.connected)return;let e=await (0,i.connect)(process.env.MONGODB_URI,c);u.isConnected=e.connections[0].readyState,i.connection.on("connected",()=>console.log("Mongodb connected to db")),i.connection.on("error",e=>console.error("Mongodb Error:",e.message))}let d=t(11185),l=t(46517),p=new d.Schema({email:{type:String,required:!0},name:{type:String,required:!0},phone:{type:String,required:!0},role:{type:String,required:!0},description:{type:String,required:!0},extra:{type:String},createdAt:{type:Date,default:Date.now},photo:{type:String,required:!0}});p.statics.fieldsForJSON=["id","name","email","createdAt","phone","role","photo","description","extra"],p.methods.forJSON=function(){return l.pick(this,this.constructor.fieldsForJSON)};let S=d.models.User||d.model("User",p),m="force-dynamic";async function GET(e,r){try{await dbConnect();let e=[],r=await S.find({});return r.forEach(r=>{console.log("user",r),e.push(r.forJSON())}),a.Z.json({users:e},{status:200})}catch(e){return console.error("Error processing API request:",e),a.Z.json({error:"Internal Server Error"},{status:500})}}async function POST(e,r){try{await dbConnect();let r=await e.json();console.log("body",r);let t=await S.create(r);return a.Z.json({user:t.forJSON()},{status:201})}catch(e){return console.error("Error processing API request:",e),a.Z.json({error:"Internal Server Error"},{status:500})}}let g=new n.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/users/route",pathname:"/api/users",filename:"route",bundlePath:"app/api/users/route"},resolvedPagePath:"/home/pavanr/Development/tvks/zkid-next-framework/app/api/users/route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:y,staticGenerationAsyncStorage:f,serverHooks:h,headerHooks:v,staticGenerationBailout:_}=g,w="/api/users/route"}};var r=require("../../../webpack-runtime.js");r.C(e);var __webpack_exec__=e=>r(r.s=e),t=r.X(0,[120,729,798],()=>__webpack_exec__(51908));module.exports=t})();